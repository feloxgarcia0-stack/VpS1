name: Laboratorio Kali Aislado (Solucion Definitiva)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Crear Entorno Kali, Instalar Todo y Exponer con tmate
        run: |
          echo "### PASO 1: Creando un contenedor Kali Linux limpio y real..."
          # Usamos la imagen oficial de Kali. -d lo corre en segundo plano. --rm lo borra al terminar.
          docker run --rm -d --name kali kalilinux/kali-rolling tail -f /dev/null

          echo "### PASO 2: Instalando tus herramientas DENTRO del contenedor Kali..."
          # Usamos 'docker exec' para ejecutar comandos DENTRO de Kali de forma segura.
          docker exec kali apt-get update
          docker exec kali apt-get install -yq \
            tmate \
            htop \
            golang-go \
            default-jdk \
            nodejs \
            npm \
            nmap \
            sqlmap 

          echo "### PASO 3: Configurando tmate para eliminar la barra verde..."
          # Creamos el archivo de configuración DENTRO del contenedor para el usuario root.
          docker exec kali bash -c "echo 'set -g status off' > /root/.tmate.conf"

          echo "### PASO 4: Obteniendo la conexión SSH..."
          # Generamos la sesión, esperamos a que esté lista y la extraemos.
          # El 'set -euo pipefail' asegura que el script falle si algo va mal.
          set -euo pipefail
          tmate_ssh=$(docker exec kali tmate -S /tmp/tmate.sock new-session -d \; wait tmate-ready \; display -p '#{tmate_ssh}')
          
          echo "================================================================================"
          echo "COPIA Y PEGA ESTO EN TU TERMINAL (NO HAY USUARIO NI CONTRASEÑA):"
          echo ""
          echo "$tmate_ssh"
          echo ""
          echo "================================================================================"
      
      # Mantenemos el job vivo para que te puedas conectar
      - name: Mantener viva la conexión
        run: sleep 21000
