name: Laboratorio Kali - Version Inteligente

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Crear Entorno Kali, Instalar Todo y Exponer con tmate
        # Le damos un ID a este paso para poder usar su output más tarde
        id: setup
        run: |
          echo "### Creando contenedor Kali..."
          docker run --rm -d --name kali kalilinux/kali-rolling tail -f /dev/null

          echo "### Instalando herramientas y tmate..."
          docker exec kali apt-get update
          docker exec kali apt-get install -yq tmate htop golang-go default-jdk nodejs npm nmap sqlmap 

          echo "### Configurando tmate sin barra verde..."
          docker exec kali bash -c "echo 'set -g status off' > /root/.tmate.conf"

          echo "### Obteniendo la conexión SSH..."
          tmate_ssh=$(docker exec kali tmate -S /tmp/tmate.sock new-session -d \; wait tmate-ready \; display -p '#{tmate_ssh}')
          
          # ¡EL CAMBIO CLAVE! Guardamos la conexión como un "output" de este paso
          echo "ssh_connection=$tmate_ssh" >> $GITHUB_OUTPUT

          echo "### La conexión es: $tmate_ssh"
      
      # ¡EL NUEVO PASO MÁGICO!
      - name: Crear Anotación con la Conexión SSH
        run: |
          # Usamos el output del paso anterior para crear una anotación de advertencia.
          # Esto es súper rápido y fácil de leer para el CLI.
          echo "::warning title=Conexion SSH Lista::${{ steps.setup.outputs.ssh_connection }}"

      - name: Mantener viva la conexión
        run: sleep 21000
